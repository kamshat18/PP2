import pygame
import sys

pygame.init()

# Constants
WIDTH, HEIGHT = 800, 600
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (255, 0, 0)
GREEN = (0, 255, 0)
BLUE = (0, 0, 255)
COLORS = [BLACK, RED, GREEN, BLUE, WHITE]
COLOR_NAMES = ["Black", "Red", "Green", "Blue", "Eraser"]
BUTTON_SIZE = 50

# Initialize screen
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Smooth Drawing Tool")
screen.fill(WHITE)

# Variables
current_color = BLACK
drawing = False
mode = "pen"
start_pos = None
points = []

# UI Elements
buttons = []
for i, color in enumerate(COLORS):
    buttons.append(pygame.Rect(10 + i * (BUTTON_SIZE + 10), HEIGHT - 60, BUTTON_SIZE, BUTTON_SIZE))

def draw_ui():
    for i, button in enumerate(buttons):
        pygame.draw.rect(screen, COLORS[i], button)
        if COLORS[i] == WHITE:  # Eraser button outline
            pygame.draw.rect(screen, BLACK, button, 2)
        if COLORS[i] == current_color:
            pygame.draw.rect(screen, WHITE, button, 3)

def get_color_from_pos(pos):
    for i, button in enumerate(buttons):
        if button.collidepoint(pos):
            return COLORS[i]
    return None

def draw_smooth_line(screen, points, width, color):
    if len(points) < 2:
        return
    for i in range(len(points) - 1):
        start = points[i]
        end = points[i + 1]
        dx = start[0] - end[0]
        dy = start[1] - end[1]
        iterations = max(abs(dx), abs(dy))
        for j in range(iterations):
            progress = j / iterations
            aprogress = 1 - progress
            x = int(aprogress * start[0] + progress * end[0])
            y = int(aprogress * start[1] + progress * end[1])
            pygame.draw.circle(screen, color, (x, y), width)

# Main loop
running = True
clock = pygame.time.Clock()
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        elif event.type == pygame.MOUSEBUTTONDOWN:
            if event.button == 1:
                new_color = get_color_from_pos(event.pos)
                if new_color is not None:
                    current_color = new_color
                    mode = "eraser" if new_color == WHITE else "pen"
                else:
                    drawing = True
                    start_pos = event.pos
                    points = [start_pos]
        elif event.type == pygame.MOUSEBUTTONUP:
            if mode in ["rectangle", "circle"] and start_pos:
                end_pos = event.pos
                if mode == "rectangle":
                    x = min(start_pos[0], end_pos[0])
                    y = min(start_pos[1], end_pos[1])
                    width = abs(start_pos[0] - end_pos[0])
                    height = abs(start_pos[1] - end_pos[1])
                    pygame.draw.rect(screen, current_color, (x, y, width, height), 2)
                elif mode == "circle":
                    radius = int(((end_pos[0] - start_pos[0]) ** 2 + (end_pos[1] - start_pos[1]) ** 2) ** 0.5)
                    pygame.draw.circle(screen, current_color, start_pos, radius, 2)
            drawing = False
            points = []
        elif event.type == pygame.MOUSEMOTION:
            if drawing and mode == "pen":
                points.append(event.pos)
                draw_smooth_line(screen, points, 5, current_color)
                points = points[-2:]
            elif drawing and mode == "eraser":
                pygame.draw.circle(screen, WHITE, event.pos, 10)
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_p:
                mode = "pen"
            elif event.key == pygame.K_e:
                mode = "eraser"
            elif event.key == pygame.K_r:
                mode = "rectangle"
            elif event.key == pygame.K_c:
                mode = "circle"

    draw_ui()
    pygame.display.flip()
    clock.tick(60)

pygame.quit()
sys.exit()